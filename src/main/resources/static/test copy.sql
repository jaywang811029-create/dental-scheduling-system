SELECT 
    "DATE",
    REGION,
    SHIFT_TYPE,

    -- 計算醫師人數
    (CASE 
        WHEN DOCTOR_NAME3 <>'　　' THEN 3
        WHEN DOCTOR_NAME2 <>'　　' THEN 2
        WHEN DOCTOR_NAME1 <>'　　' THEN 1
        ELSE 0
     END) AS doctor_count,


    -- 缺額


    ( (CASE 
          WHEN DOCTOR_NAME3 <>'　　' THEN 1
          WHEN DOCTOR_NAME2 <>'　　' THEN 1
          WHEN DOCTOR_NAME1 <>'　　' THEN 1
          ELSE 0 END) -
      (CASE WHEN FRONT_DESK1 <>'　　' THEN 1 ELSE 0 END +
       CASE WHEN FRONT_DESK2 <>'　　' THEN 1 ELSE 0 END +
       CASE WHEN FRONT_DESK3 <>'　　' THEN 1 ELSE 0 END) ) AS missing_frontdesk,

    ( (CASE 
          WHEN DOCTOR_NAME3 <>'　　' THEN 3
          WHEN DOCTOR_NAME2 <>'　　' THEN 2
          WHEN DOCTOR_NAME1 <>'　　' THEN 1
          ELSE 0 END) -
      (CASE WHEN CHAIRSIDE_NAME1 <>'　　' THEN 1 ELSE 0 END +
       CASE WHEN CHAIRSIDE_NAME2 <>'　　' THEN 1 ELSE 0 END +
       CASE WHEN CHAIRSIDE_NAME3 <>'　　' THEN 1 ELSE 0 END) ) AS missing_chairside,

    ( (CASE 
          WHEN DOCTOR_NAME3 <>'　　' THEN 2
          WHEN DOCTOR_NAME2 <>'　　' THEN 1
          WHEN DOCTOR_NAME1 <>'　　' THEN 1
          ELSE 0 END) -
      (CASE WHEN FLOATER_NAME1 <>'　　' THEN 1 ELSE 0 END +
       CASE WHEN FLOATER_NAME2 <>'　　' THEN 1 ELSE 0 END +
       CASE WHEN FLOATER_NAME3<>'　　' THEN 1 ELSE 0 END) ) AS missing_floater
FROM RESULT_SCHEDULE ;



--- 計算個崗位數字
SELECT
    name AS employee_name,
    position,
    COUNT(*) AS total_count
FROM (
    -- 標準化 CHAIRSIDE_NAME1, CHAIRSIDE_NAME2, CHAIRSIDE_NAME3
    SELECT REPLACE(REPLACE(CHAIRSIDE_NAME1, '*', ''), '!', '') AS name, 'CHAIRSIDE' AS position
    FROM RESULT_SCHEDULE
    WHERE CHAIRSIDE_NAME1 IS NOT NULL AND CHAIRSIDE_NAME1 != ''
    UNION ALL
    SELECT REPLACE(REPLACE(CHAIRSIDE_NAME2, '*', ''), '!', '') AS name, 'CHAIRSIDE' AS position
    FROM RESULT_SCHEDULE
    WHERE CHAIRSIDE_NAME2 IS NOT NULL AND CHAIRSIDE_NAME2 != ''
    UNION ALL
    SELECT REPLACE(REPLACE(CHAIRSIDE_NAME3, '*', ''), '!', '') AS name, 'CHAIRSIDE' AS position
    FROM RESULT_SCHEDULE
    WHERE CHAIRSIDE_NAME3 IS NOT NULL AND CHAIRSIDE_NAME3 != ''
    
    -- 標準化 FLOATER_NAME1, FLOATER_NAME2, FLOATER_NAME3
    UNION ALL
    SELECT REPLACE(REPLACE(FLOATER_NAME1, '*', ''), '!', '') AS name, 'FLOATER' AS position
    FROM RESULT_SCHEDULE
    WHERE FLOATER_NAME1 IS NOT NULL AND FLOATER_NAME1 != ''
    UNION ALL
    SELECT REPLACE(REPLACE(FLOATER_NAME2, '*', ''), '!', '') AS name, 'FLOATER' AS position
    FROM RESULT_SCHEDULE
    WHERE FLOATER_NAME2 IS NOT NULL AND FLOATER_NAME2 != ''
    UNION ALL
    SELECT REPLACE(REPLACE(FLOATER_NAME3, '*', ''), '!', '') AS name, 'FLOATER' AS position
    FROM RESULT_SCHEDULE
    WHERE FLOATER_NAME3 IS NOT NULL AND FLOATER_NAME3 != ''

    -- 標準化 FRONT_DESK1, FRONT_DESK2, FRONT_DESK3
    UNION ALL
    SELECT REPLACE(REPLACE(FRONT_DESK1, '*', ''), '!', '') AS name, 'FRONT_DESK' AS position
    FROM RESULT_SCHEDULE
    WHERE FRONT_DESK1 IS NOT NULL AND FRONT_DESK1 != ''
    UNION ALL
    SELECT REPLACE(REPLACE(FRONT_DESK2, '*', ''), '!', '') AS name, 'FRONT_DESK' AS position
    FROM RESULT_SCHEDULE
    WHERE FRONT_DESK2 IS NOT NULL AND FRONT_DESK2 != ''
    UNION ALL
    SELECT REPLACE(REPLACE(FRONT_DESK3, '*', ''), '!', '') AS name, 'FRONT_DESK' AS position
    FROM RESULT_SCHEDULE
    WHERE FRONT_DESK3 IS NOT NULL AND FRONT_DESK3 != ''

    -- 標準化 SUPPORT_NAME1, SUPPORT_NAME2
    UNION ALL
    SELECT REPLACE(REPLACE(SUPPORT_NAME1, '*', ''), '!', '') AS name, 'SUPPORT' AS position
    FROM RESULT_SCHEDULE
    WHERE SUPPORT_NAME1 IS NOT NULL AND SUPPORT_NAME1 != ''
    UNION ALL
    SELECT REPLACE(REPLACE(SUPPORT_NAME2, '*', ''), '!', '') AS name, 'SUPPORT' AS position
    FROM RESULT_SCHEDULE
    WHERE SUPPORT_NAME2 IS NOT NULL AND SUPPORT_NAME2 != ''
) AS combined_data
GROUP BY employee_name, position
ORDER BY employee_name, position;